; PROBLEMAS
; Se o primeiro valor for 1, ele nao aceita


; Mapeamento hardware
RS EQU P1.3 ; Reg Select em P1.3
EN EQU P1.2 ; Enable em P1.2

ORG 00H
LJMP START

ORG 40H
STRINGINICIO:
	DB "TRAVA DIGITAL"
	DB 0

STRINGINPUT:
	DB "DIGITE SENHA"
	DB 0

STRINGERRO:
	DB "ERROU"
	DB 0

STRINGACERTO:
	DB "LIBERADO"
	DB 0

START:
	MOV 40H, #'#' 
	MOV 41H, #'0'
	MOV 42H, #'*'
	MOV 43H, #'9'
	MOV 44H, #'8'
	MOV 45H, #'7'
	MOV 46H, #'6'
	MOV 47H, #'5'
	MOV 48H, #'4'
	MOV 49H, #'3'
	MOV 4AH, #'2'
	MOV 4BH, #'1'
	ACALL SENHADEF
	ACALL FECHA
	ACALL LCD_INIT
	ACALL MENSAGEMINIDISPLAY
	MOV R7, #03H ; numero de tentativas
	CALL DELAY50 ;
MAIN:
	ACALL LIMPADISPLAY
	ACALL MENSAGEMINPUT
	MOV R5, #00H
	MOV R1, #70H
LOOP:
	ACALL LETECLADO
;MOV A, #0H
;MOV @R1, A
;INC R1
	JNB F0, LOOP
;	Caso tenha pressionado algo
;	Pega o valor e joga na memoria
	MOV A, #40h
	ADD A, R0
	MOV R0, A
	MOV A, @R0
	MOV @R1, A
	INC R1
;	Mostra um asterisco na tela
	MOV A, R5
	ADD A, #46H
	ACALL POSCURSOR
	CALL DELAY50
	MOV A, #'*'
	ACALL MOSTRACHAR

	CLR F0
	INC R5
	CALL DELAY50
;	Ainda nao pegou 5 digitos, volta
	CJNE R5, #05H, LOOP
;	Caso tenha pego 5 digitos
	ACALL CHECASENHA
	SJMP $

CHECASENHA:
	MOV R0, #60H
	MOV R1, #70H
	MOV R5, #00H
	LOOPCHECK:
	CLR A
	CLR C
	MOV A, @R0
	SUBB A, @R1
	JNZ ERROU
	INC R0
	INC R1
	INC R5
	CJNE R5, #05H, LOOPCHECK
	ACALL ACERTOU
	RET

PROXCHAR:
CLR A
JNZ ERROU
DJNZ R6, PROXCHAR
DEC R7

ACERTOU:
	MOV R7, #03H ; numero de tentativas reseta
	ACALL LIMPADISPLAY
	ACALL MENSAGEMACERTO
	ACALL ABRE
	JMP $

ERROU:
	ACALL LIMPADISPLAY
	ACALL MENSAGEMERRO
	ACALL DELAY3000
	DEC R7
	LJMP MAIN

; Teclado

LETECLADO:
	MOV R0, #0			

	; row0
	MOV P0, #0FFh	
	CLR P0.0
	CALL LECOLUNA
	JB F0, TERMINO
						
	; row1
	SETB P0.0
	CLR P0.1
	CALL LECOLUNA
	JB F0, TERMINO

	; row2
	SETB P0.1
	CLR P0.2
	CALL LECOLUNA
	JB F0, TERMINO	

	; scan row3
	SETB P0.2
	CLR P0.3
	CALL LECOLUNA
	JB F0, TERMINO			
TERMINO:
	RET

LECOLUNA:
	JNB P0.4, PRESSIONADO
	INC R0			
	JNB P0.5, PRESSIONADO
	INC R0			
	JNB P0.6, PRESSIONADO
	INC R0			
	RET				
PRESSIONADO:
	SETB F0			
	RET			


; LCD
LCD_INIT:
	CLR RS
	CLR P1.7
	CLR P1.6
	SETB P1.5
	CLR P1.4
	SETB EN
	CLR EN
	CALL DELAY50	

	SETB EN
	CLR EN
	SETB P1.7
	SETB EN
	CLR EN
	CALL DELAY50

	CLR P1.7
	CLR P1.6
	CLR P1.5
	CLR P1.4
	SETB EN
	CLR EN
	SETB P1.6
	SETB P1.5
	SETB EN
	CLR EN
	CALL DELAY50

	CLR P1.7
	CLR P1.6
	CLR P1.5
	CLR P1.4
	SETB EN
	CLR EN
	SETB P1.7
	SETB P1.6
	SETB P1.5
	SETB P1.4
	SETB EN
	CLR EN
	CALL DELAY50
	RET


MOSTRACHAR:
	SETB RS  	
	MOV C, ACC.7	
	MOV P1.7, C		
	MOV C, ACC.6		
	MOV P1.6, C		
	MOV C, ACC.5	
	MOV P1.5, C		
	MOV C, ACC.4	
	MOV P1.4, C		

	SETB EN		
	CLR EN		

	MOV C, ACC.3	
	MOV P1.7, C		
	MOV C, ACC.2	
	MOV P1.6, C		
	MOV C, ACC.1	
	MOV P1.5, C		
	MOV C, ACC.0	
	MOV P1.4, C		

	SETB EN		
	CLR EN		

	CALL DELAY50
	RET

;Posiciona o cursor na linha e coluna desejada.
;Escreva no Acumulador o valor de endere o da linha e coluna.
;|--------------------------------------------------------------------------------------|
;|linha 1 | 00 | 01 | 02 | 03 | 04 |05 | 06 | 07 | 08 | 09 |0A | 0B | 0C | 0D | 0E | 0F |
;|linha 2 | 40 | 41 | 42 | 43 | 44 |45 | 46 | 47 | 48 | 49 |4A | 4B | 4C | 4D | 4E | 4F |
;|--------------------------------------------------------------------------------------|
POSCURSOR:
	CLR RS	         
	SETB P1.7		    
	MOV C, ACC.6		
	MOV P1.6, C			
	MOV C, ACC.5		
	MOV P1.5, C	
	MOV C, ACC.4
	MOV P1.4, C	

	SETB EN		
	CLR EN		

	MOV C, ACC.3
	MOV P1.7, C	
	MOV C, ACC.2
	MOV P1.6, C	
	MOV C, ACC.1
	MOV P1.5, C	
	MOV C, ACC.0
	MOV P1.4, C	

	SETB EN		
	CLR EN		

	CALL DELAY50
	RET

;Retorna o cursor para primeira posi  o sem limpar o display
CURSORINI:
	CLR RS	
	CLR P1.7
	CLR P1.6
	CLR P1.5
	CLR P1.4

	SETB EN	
	CLR EN	

	CLR P1.7
	CLR P1.6
	SETB P1.5	
	SETB P1.4	

	SETB EN		
	CLR EN		

	CALL DELAY50
	RET

LIMPADISPLAY:
	CLR RS	    
	CLR P1.7		
	CLR P1.6		
	CLR P1.5		
	CLR P1.4		

	SETB EN		
	CLR EN	

	CLR P1.7	
	CLR P1.6	
	CLR P1.5	
	SETB P1.4	

	SETB EN		
	CLR EN		
	
	ACALL DELAY1500
	RET

ESCREVESTRING:
  MOV R1, #00h
LOOPSTRING:
	MOV A, R1
	MOVC A,@A+DPTR 
	JZ FIMSTRING	
	ACALL MOSTRACHAR
	INC R1		
	MOV A, R1
	JMP LOOPSTRING		
FIMSTRING:
	RET

; Mensagem inicial
MENSAGEMINIDISPLAY:
	MOV A, #02h
	ACALL POSCURSOR 
	MOV DPTR,#STRINGINICIO
	ACALL ESCREVESTRING
	RET

MENSAGEMINPUT:
	MOV A, #02h
	ACALL POSCURSOR 
	MOV DPTR,#STRINGINPUT
	ACALL ESCREVESTRING
	RET

MENSAGEMACERTO:
	MOV A, #04h
	ACALL POSCURSOR 
	MOV DPTR,#STRINGACERTO
	ACALL ESCREVESTRING
	RET

MENSAGEMERRO:
	MOV A, #06h
	ACALL POSCURSOR 
	MOV DPTR,#STRINGERRO
	ACALL ESCREVESTRING
	RET

; Motor
ABRE:
	CLR P3.0
	SETB P3.1
	CALL DELAYMOTOR
	CLR P3.1
	RET

FECHA:
	SETB P3.0
	CLR P3.1
	CALL DELAYMOTOR
	CLR P3.0
	RET

DELAY50:
	MOV R6, #50
	DJNZ R6, $
	RET

DELAY1500:
	MOV R5, #30
	LOOPCLEAR1500:
	CALL DELAY50
	DJNZ R5, LOOPCLEAR1500
	RET

DELAY3000:
	MOV R5, #60
	LOOPCLEAR3000:
	CALL DELAY50
	DJNZ R5, LOOPCLEAR3000
	RET

DELAYMOTOR:
	MOV R0, #13 ; Delay para fechar
	DJNZ R0, $
	RET
;

; Senha
SENHADEF:
; 52, 51, 50, 49, 48, 0
	MOV R0, #05H
	MOV R1, #60H
	MOV A, #34H
	LOOPSENHA:
	MOV @R1, A
	INC R1
	DEC A
	DJNZ R0, LOOPSENHA
	MOV @R1, #0H
	RET
